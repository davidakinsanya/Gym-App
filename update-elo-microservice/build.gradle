import org.jetbrains.kotlin.gradle.tasks.*

plugins {
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'application'

group = 'com.uplift.backend'
version = '0.0.1-SNAPSHOT'

application {
	mainClass.set("com.uplift.backend.main.UpdateEloApplicationKt")
}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.squareup.retrofit2:retrofit:2.7.2'
	implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
	implementation 'com.squareup.retrofit2:adapter-rxjava:2.7.2'
	implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	manifest {
		attributes 'Main-Class': 'com.uplift.backend.main.UpdateEloApplicationKt'
	}

	from {
		configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it) }
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
